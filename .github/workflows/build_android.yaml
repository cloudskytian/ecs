name: Build Android APK

on:
  push:
    branches:
      - android-app
  pull_request:
    branches:
      - android-app
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-android-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-android-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev

      - name: Install Fyne CLI
        run: |
          go install fyne.io/fyne/v2/cmd/fyne@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android NDK
        run: |
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;25.2.9519653"
          echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Download dependencies
        run: |
          go mod download
          go mod tidy

      - name: Build Android APK
        run: |
          fyne package -os android -appID com.oneclickvirt.goecs -name GoECS
        env:
          CGO_ENABLED: 1

      - name: Get version
        id: version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
          else
            VERSION="dev-$(git rev-parse --short HEAD)"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Rename APK
        run: |
          if [ -f GoECS.apk ]; then
            mv GoECS.apk goecs-android-${{ steps.version.outputs.version }}.apk
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: goecs-android-${{ steps.version.outputs.version }}
          path: goecs-android-*.apk
          retention-days: 30

      - name: Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: goecs-android-*.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
